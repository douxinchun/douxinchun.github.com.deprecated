<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[分类：git | 冷雨之家]]></title>
  <link href="http://douxinchun.github.io/blog/categories/git/atom.xml" rel="self"/>
  <link href="http://douxinchun.github.io/"/>
  <updated>2021-11-05T19:20:23+08:00</updated>
  <id>http://douxinchun.github.io/</id>
  <author>
    <name><![CDATA[Spring]]></name>
    <email><![CDATA[douxinchunlengyu@163.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Gitignore 文件屏蔽规则]]></title>
    <link href="http://douxinchun.github.io/blog/20190131/rule-of-gitignore-file.html"/>
    <updated>2019-01-31T18:10:28+08:00</updated>
    <id>http://douxinchun.github.io/blog/20190131/rule-of-gitignore-file</id>
    <content type="html"><![CDATA[<p>文件名： <strong>.gitignore</strong></p>

<p>位置：</p>

<p>global 当前用户的主目录下 ~  一般是自己使用不和别人share 该设置对所有的本地仓库都起作用</p>

<p>local 当前仓库的主目录下 一般需要加入到git库的版本控制中，需要和别人share</p>

<p><strong>git config</strong> 中的 <strong>core.excludesfile</strong> 可以指定 .gitignore 文件</p>

<p>格式规范如下：</p>

<ul>
<li>所有空行和#开头的行都会被忽略</li>
<li>文件或者目录前加 / 表示仓库根目录下的对应文件，子目录下的同名文件不忽略</li>
<li>文件或者目录后加 / 表示要忽略的是目录，不加 / 表示文件和目录都忽略</li>
<li>所有模式取反可以在最前面加 ！</li>
<li>可以使用标准的 <strong>glob</strong> 模式匹配</li>
</ul>


<p>glob 模式是一种简化了的正则表达式，使用于shell
- * 匹配零个或者多个任意字符
- ？匹配任意一个字符
- [abc] 匹配任意一个方括号中的字符
- [0-9] 短线表示范围，表示匹配任意一个0到9的数字
- {string1,string2} 大括号代表可选的字符串</p>

<p>匹配时，下面的条目可以覆盖上
<code>bash
readme.md       # 屏蔽仓库中所有名为 readme.md 的文件
!/readme.md     # 在上一条屏蔽规则的条件下，不屏蔽仓库根目录下的 readme.md 文件
</code></p>

<h2>Link</h2>

<p><a href="https://www.jianshu.com/p/13612fb4b224">https://www.jianshu.com/p/13612fb4b224</a>
<a href="https://www.cnblogs.com/qwertWZ/archive/2013/03/26/2982231.html">https://www.cnblogs.com/qwertWZ/archive/2013/03/26/2982231.html</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Git Commands 使用手记]]></title>
    <link href="http://douxinchun.github.io/blog/20180430/git-command-shi-yong-shou-ji.html"/>
    <updated>2018-04-30T17:44:10+08:00</updated>
    <id>http://douxinchun.github.io/blog/20180430/git-command-shi-yong-shou-ji</id>
    <content type="html"><![CDATA[<p>本文主要用来记录自己在使用Git的过程遇到的一些问题及解决方案.</p>

<h2>1.Git push error: dst refspec dev_1.0 matches more than one.</h2>

<h3>导火索</h3>

<p>  Git 删除远程库中的一个分支的时候报错,如下:</p>

<pre><code class="``">  git push origin --delete dev_1.0
  error: dst refspec dev_1.0 matches more than one.
  error: failed to push some refs to 'git@xxxxx:xxx/xxx.git'
</code></pre>

<p>  出现这个错误的原因是在于远程Git服务器上名称为dev_1.0的有两个对象：一个是tag，一个是branch；在执行 git push origin &ndash;delete dev_1.0这个命令时Git服务器不知道要删除哪个。</p>

<h3>解决办法</h3>

<p>删除名称为dev_1.0的branch：<br/>
<code>
git push origin :refs/heads/dev_1.0
</code><br/>
删除名称为dev_1.0的tag:<br/>
<code>
git push origin :refs/tags/dev_1.0
</code></p>
]]></content>
  </entry>
  
</feed>
